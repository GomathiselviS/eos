#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2020 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for eos_eos_bgp_global
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

DOCUMENTATION = """
module: eos_bgp_global
short_description: Manages BGP global resource module
description: This module configures and manages the attributes of BGP global on Arista
  EOS platforms.
version_added: 1.4.0
author: Gomathi Selvi Srinivasan (@GomathiselviS)
notes:
- Tested against Arista EOS 4.23.0F
- This module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).
options:
    config:
      description: A list of configurations for BGP global.
      type: dict
      suboptions:
        AS_number:
          description: Autonomous system number.
          type: str
        aggregate_address:
          description: Configure aggregate address.
          type: list
          elements: dict
          suboptions:
            address:
              description: ipv4/ipv6 address prefix.
              type: str
            advertise_only:
              description: Advertise without installing the generated blackhole route in
                  FIB.
              type: bool
            as_set:
              description: Generate autonomous system set path information.
              type: bool
            attribute_map:
              description: Name of the route map used to set the attribute of the
                  aggregate route.
              type: str
            match_map:
              description: Name of the route map used to filter the contributors of the
                  aggregate route.  
              type: str
            summary_only:
              description: Filters all more-specific routes from updates.
              type: bool
        bgp_params:
          description: BGP parameters.
          type: dict
          suboptions:
            additional_paths:
              description: BGP additional-paths commands
              type: str
              choices: ['install', 'send', 'receive'] 
            advertise_inactive:
              description: Advertise BGP routes even if they are inactive in RIB.
              type: bool
            allowas_in:
              description: Allow local-as in updates.
              type: dict
              suboptions:
                set:
                  description: When True, it is set.
                  type: bool
                count:
                  description: Number of local ASNs allowed in a BGP update.
                  type: int
            always_compare_med:
              description: BGP Always Compare MED
              type: bool
            asn:
              description: AS Number notation.
              type: str
              choices: ['asdot', 'asplain']
            auto_local_addr:
              description: Automatically determine the local address to be used
                         for the non-transport AF.
              type: bool
            bestpath:
              description: Select the bestpath selection algorithim for BGP routes.
              type: dict
              suboptions:
                as_path:
                  description: Select the bestpath selection based on as-path.
                  type: str
                  choices: ['ignore', 'multipath_relax']
                ecmp_fast:
                  description: Tie-break BGP paths in a ECMP group based on the order of arrival.
                  type: bool
                med:
                  description: MED attribute
                  type: dict
                  suboptions:
                    confed:
                      description: MED Confed.
                      type: bool
                    missing_as_worst:
                      description: MED missing-as-worst.
                      type: bool
                skip:
                  description: skip one of the tie breaking rules in the bestpath selection.
                  type: bool
                tie_break:
                  description: Configure the tie-break option for BGP bestpath selection.
                  choices: ['cluster_list_length', 'router_id']
                  type: str
            client_to_client:
              description: client to client configuration.
              type: bool
            cluster_id:
              description: Cluster ID of this router acting as a route reflector.
              type: str
            confederation:
              description: confederation.
              type: dict
              suboptions:
                identifier:
                  description: Confederation identifier.
                  type: int
                peers:
                  description: Confederation peers.
                  type: list  
            control_plan_filter:
              description: Control plane filter for BGP.
              type: bool
            convergence:
              description: Bgp convergence parameters.
              type: dict
              suboptions:
                slow_peer:
                  description: Maximum amount of time to wait for slow peers to estabilsh session.
                  type: int
                time:
                  description: time in secs
                  type: int
            default:
              description: Default neighbor configuration commands.
              type: str
              choices: ['ipv4_unicast', 'ipv6_unicast']
            enforce_first_as:
              description: Enforce the First AS for EBGP routes(default).
              type: bool
            host_routes:
              description: BGP host routes configuration.
              type: bool
            labeled_unicast:
              description: Labeled Unicast.
              type: str
              choices: ['ip', 'tunnel']
            listen:
              description: BGP listen.
              type: dict
              suboptions:
                limit:
                  description: Set limit on the number of dynamic BGP peers allowed.
                  type: int
                range:
                  description: Subnet Range to be associated with the peer-group.
                  type: dict
                  suboptions:
                    address:
                      description: Address prefix
                      type: str
                    peer_group:
                      description: Name of peer group.
                      type: dict
                      suboptions:
                        name:
                          description: name.
                          type: str
                        peer_filter:
                          description: Name of peer filter.
                          type: str
                        remote_as:
                          description: Neighbor AS number
                          type: str
            log_neighbor_changes:
              description: Log neighbor up/down events.
              type: bool
            missing_policy:
              description: Missing policy override configuration commands.
              type: dict
              suboptions:
                direction:
                  description: Missing policy direction options.
                  type: str
                  choices: ['in', 'out']
                action:
                  description: Missing policy action options.
                  type: str
                  choices: ['deny', 'permit', 'deny-in-out']
            monitoring:
              description: Enable Bgp monitoring for all/specified stations.
              type: bool
            next_hop_unchanged:
              description: Preserve original nexthop while advertising routes to
                     eBGP peers.
              type: bool
            redistribute_internal:
              description: Redistribute internal BGP routes.
              type: bool
            route:
              description: Configure route-map for route installation.
              type: str
            route_reflector:
              description: Configure route reflector options
              type: dict
              suboptions:
                set:
                  description: When True route_reflector is set.
                  type: bool
                preserve:
                  description: preserve route attributes, overwriting route-map changes
                  type: bool 
            transport:
              description: Configure transport port for TCP session
              type: int
        default_metric:
          description: Default metric.
          type: int
        graceful_restart:
          description: Enable graceful restart mode.
          type: dict
          suboptions:
            set:
              description: When True, graceful restart is set.
              type: bool
            restart_time:
              description: Set the max time needed to restart and come back up.
              type: int
            stalepath_time:
              decription: Set the max time to hold onto restarting peer stale paths.
              type: int
        graceful_restart_helper:
          description: Enable graceful restart helper mode.
          type: bool
        access_group:
          desscription: ip/ipv6 access list configuration.
          type: dict
          suboptions:
            afi:
              desscription: Specify ip/ipv6.
              type: str
              choices: ['ip', 'ipv6']
            acl_name:
              description: access list name.
              type: str
            direction:
              description: direction of packets.
              type: str
        maximum_paths:
          description: Maximum number of equal cost paths.
          type: dict
          suboptions:
            max_equal_cost_paths:
              description: Value for maximum number of equal cost paths.
              type: int
            max_installed_ecmp_paths:
              description: Value for maximum number of installed ECMP routes.
              type: int
        monitoring:
          description: BGP monitoring protocol configuration.
          type: dict
          suboptions:
            port:
              description: Configure the BGP monitoring protocol port number <1024-65535>.
              type: int
            received:
              description: BGP monitoring protocol received route selection.
              type: str
              choices: ['post_policy', 'pre_policy']
            station:
              description: BGP monitoring station configuration.
              type: str
            timestamp:
              description: BGP monitoring protocol Per-Peer Header timestamp behavior.
              type: str
              choices: ['none', 'send_time'] 
        neighbor:
          description: Configure routing for a network.
          type: list
          elements: dict
          suboptions:
            address:
              type: str
              description: Neighbor address
            peer_group:
              description: Name of the peer-group.
              type: str
            additional_paths:
              description: BGP additional-paths commands.
              type: str
              choices: ['send', 'receive']
            allowas_in:
              description: Allow local-as in updates.
              type: dict
              suboptions:
                set:
                  description: When True, it is set.
                  type: bool
                count:
                  description: Number of local ASNs allowed in a BGP update.
                  type: int
            auto_local_addr:
              description: Automatically determine the local address to be used
                             for the non-transport AF.
              type: bool
            default_orignate:
              description: Originate default route to this neighbor.
              type: dict
              suboptions:
                route_map:
                  description: Route map reference.
                  type: str
                always:
                  descrition: Always originate default route to this neighbor.
                  type: bool
            description:
              description: Text describing the neighbor.
              type: str
            dont_capability_negotiate:
              description: Donot perform Capability Negotiation with this
                             neighbor.
              type: bool
            ebgp_multihop:
              description: Allow BGP connections to indirectly connected
                             external peers.
              type: dict
              suboptions:
                ttl:
                  description: Time-to-live in the range 1-255 hops.
                  type: int
                set:
                  description: If True, ttl is not set.
                  type: bool
            enforce_first_as:
              description: Enforce the First AS for EBGP routes(default).
              type: bool
            export_localpref:
              description: Override localpref when exporting to an internal
                             peer.
              type: int
            fall_over:
              description: Configure BFD protocol options for this peer.
              type: bool 
            graceful_restart:
              description: Enable graceful restart mode.
              type: bool
            graceful_restart_helper:
              description: Enable graceful restart helper mode.
              type: bool
            idle_restart_timer:
              description: Neighbor idle restart timer.
              type: int
            import_localpref:
              description: Override localpref when importing from an external
                             peer.
              type: int
            link_bandwidth:
              description: Enable link bandwidth community for routes to this
                             peer.
              type: dict
              suboptions:
                set:
                  description: If True, set link bandwidth
                  type: bool
                auto:
                  description: Enable link bandwidth auto generation for routes from this peer.
                  type: bool
                default:
                  description: Enable link bandwidth default generation for routes from this
                                peer.
                  type: str
                update_delay:
                  description: Delay outbound route updates.
                  type: int
            local_as:
              description: Configure local AS number advertised to peer.
              type: dict
              suboptions:
                as_number:
                  description: AS number.
                  type: str
                fallback:
                  description: Prefer router AS Number over local AS Number.
                  type: bool
            local_v6_addr:
              description: The local IPv6 address of the neighbor in A:B:C:D:E:F:G:H format.
              type: str
            maximum_accepted_route:
              description: Maximum number of routes accepted from this peer.
              type: dict
              suboptions:
                count:
                  description: Maximum number of accepted routes (0 means unlimited).
                  type: int
                warning_limit:
                  description: Maximum number of accepted routes after which a warning is issued.
                               (0 means never warn)
                  type: int
            maximum_received_routes:
              description: Maximum number of routes received from this peer.
              type: dict
              suboptions:
                count:
                  description: Maximum number of routes (0 means unlimited).
                  type: int
                warning_limit:
                  description: Percentage of maximum-routes at which warning is to be issued.
                  type: dict
                  suboptions:
                    limit_count:
                      description: Number of routes at which to warn.
                      type: int
                    limit_percent:
                      description: Percentage of maximum number of routes at which to warn( 1-100).
                      type: int
                warning_only:
                  description: Only warn, no restart, if max route limit exceeded.
                  type: bool
            metric_out:
              description: MED value to advertise to peer.
              type: int
            monitoring:
              description: Enable BGP Monitoring Protocol for this peer.
              type: bool
            next_hop_self:
              description: Always advertise this router address as the BGP
                             next hop
              type: bool
            next_hop_unchanged:
              description: Preserve original nexthop while advertising routes to
                     eBGP peers.
              type: bool
            next_hop_v6_address:
              description: IPv6 next-hop address for the neighbor
              type: str
            out_delay:
              description: Delay outbound route updates.
              type: int.
            encryption_password:
              description: Password to use in computation of MD5 hash.
              type: dict
              suboptions:
                type:
                  description: Encryption type.
                  type: int
                  choices: [0, 7]
                password:
                  description: password (up to 80 chars).
                  type: str
            remote_as:
              description: Neighbor Autonomous System.
              type: str
            remove_private_as:
              description: Remove private AS number from updates to this peer.
              type: dict
              suboptions:
                set:
                  description: If True, set remove_private_as.
                  type: bool
                all:
                  description: Remove private AS number.
                  type: bool
                replace_as:
                  description: Replace private AS number with local AS number.
                  type: bool
            peer_group:
              description: Name of the peer-group.
              type: str 
        
            prefix_list:
              description: Prefix list reference.
              type: dict
              suboptions:
                direction:
                  description: Configure an inbound/outbound prefix-list.
                  type: str
                  choices: ['in', 'out']
                name:
                  description: prefix list name.
                  type: str
            route_map:
              description: Route map reference.
              type: dict
              suboptions:
                direction:
                  description: Configure an inbound/outbound route-map.
                  type: str
                  choices: ['in', 'out']
                name:
                  description: Route map name.
                  type: str
            route_reflector_client:
              description: Configure peer as a route reflector client.
              type: bool
            route_to_peer:
              description: Use routing table information to reach the peer.
              type: bool
            send_community:
              description: Send community attribute to this neighbor.
              type: dict
              suboptions:
                community_attribute:
                  description: Type of community attributes to send to this neighbor.
                  type: str
                sub_attribute:
                  description: Attribute to be sent to the neighbor.
                  type: str
                  choices: ['extended', 'link_bandwidth', 'standard']
                link_bandwidth_attribute:
                  description: cumulative/aggregate attribute to be sent.
                  type: str
                  choices: ['aggregate', 'divide']
                speed:
                  description: Reference link speed in bits/second
                  type: str 
                divide:
                  description: link-bandwidth divide attribute.
                  type: str
                  choices: ['equal', 'ratio']
            shut_down:
              description: Administratively shut down this neighbor.
              type: bool
            soft_recognition:
              description: Configure how to handle routes that fail import.
              type: str
              choices: ['all', 'None']
            timers:
              description: Timers.
              type: dict
              suboptions:
                keepalive:
                  description: Keep Alive Interval in secs.
                  type: int
                holdtime:
                  description: Hold time in secs.
                  type: int
            transport:
              description: Configure transport options for TCP session.
              type: dict
              suboptions:
                connection_mode:
                  description: Configure connection-mode for TCP session.
                  type: str
                remote_port:
                  description: Configure BGP peer TCP port to connect to.
                  type: int
            ttl:
              description: BGP ttl security check
              type: int 
            update_source:
              description: Specify the local source interface for peer BGP
                             sessions.
              type: str
            weight:
              description: Weight to assign.
              type: int 
        network:
          description: Configure routing for a network.
          type: dict
          suboptions:
            address:
              description: address prefix.
              type: int
            route_map:
              description: Name of route map.
              type: str
        redistribute:
          description: Redistribute routes in to BGP.
          type: list
          elements: dict
          suboptions:         
            protocol:
              description: Routes to be redistributed.
              type: str
              choices: ['isis', 'ospf3', 'ospf', 'attached_host', 'connected', 'rip', 'static']
            route_map:
              description: Route map reference.
              type: str
            isis_level:
              description: Applicable for isis routes. Specify isis route level.
              type: str
              choices: ['level-1', 'level-2', 'level-1-2']
            ospf_route:
              description: ospf route options.
              type: str
              choices: ['internal', 'external', 'nssa_external_1', 'nssa_external_2']  
        router_id:
          description: Router id.
          type: str
        shutdown:
          description: When True, shut down BGP.
          type: bool
        timers:
          description: Timers.
          type: dict
          suboptions:
            keepalive:
              description: Keep Alive Interval in secs.
              type: int
            holdtime:
              description: Hold time in secs.
              type: int
        ucmp:
          description: Configure unequal cost multipathing.
          type: dict
          suboptions:
            fec:
              description: Configure UCMP fec utilization threshold.
              type: dict
              suboptions:
                trigger:
                  description: UCMP fec utilization too high threshold.
                  type: int
                clear:
                  description: UCMP FEC utilization Clear thresholds.
                  type: int
            link_bandwidth:
              description: Configure link-bandwidth propagation delay.
              type: dict
              suboptions:
                mode:
                  description: UCMP link bandwidth mode
                  type: str
                  choices: ['encoding_weighted', 'recursive']
                update_delay:
                  description: Link Bandwidth Advertisement delay.
                  type: int
            mode:
              description: UCMP mode.
              type: dict
              suboptions:
                set:
                  description: If True, ucmp mode is set to 1.
                  type: bool
                nexthops:
                  description: Value for total number UCMP nexthops.
                  type: int
        update:
          description: Configure BGP update generation.
          type: dict
          suboptions:
            wait_for:
              description: wait for options before converge or synchronize.
              type: str
              choices: ['wait_for_convergence', 'wait_install']
            batch_size:
              description: batch size for FIB route acknowledgements.
              type: int
        vlan:
          description: Configure MAC VRF BGP for single VLAN support.
          type: int
        vlan_aware_bundle:
          description: Configure MAC VRF BGP for multiple VLAN support.
          type: list
          elements: str
        vrf:
          description: Configure BGP in a VRF.
          type: list
          elements: dict
          suboptions:
            name:
             description: VRF name.
             type: str
            address_family:
              description: Enable address family and enter its config mode
              type: list
              elements: dict
              suboptions:
                afi:
                  description: address family.
                  type: str
                  choices: ['ipv4', 'ipv6']
                af_type:
                  description: Address family type for ipv4.
                  type: str
                  choices: ['labeled_unicast', 'multicast']
                bgp_params:
                  description: BGP parameters.
                  type: dict
                  suboptions:
                    additional_paths:
                      description: BGP additional-paths commands
                      type: str
                      choices: ['install', 'send', 'receive'] 
                    next_hop_address_family:
                      description: Next-hop address-family configuration
                      type: str
                      choices: ['ipv6']
                    next_hop_unchanged:
                      description: Preserve original nexthop while advertising routes to
                             eBGP peers.
                      type: bool
                    redistribute_internal:
                      description: Redistribute internal BGP routes.
                      type: bool
                    route:
                      description: Configure route-map for route installation.
                      type: str
                graceful_restart:
                  description: Enable graceful restart mode.
                  type: bool
                neighbor:
                  description: Configure routing for a network.
                  type: list
                  elements: dict
                  suboptions:
                    address:
                      type: str
                      description: Neighbor address
                    peer_group:
                      description: Name of the peer-group.
                      type: str
                    activate:
                      description: Activate neighbor in the address family.
                      type: bool
                    additional_paths:
                      description: BGP additional-paths commands.
                      type: str
                      choices: ['send', 'receive']
                    default_orignate:
                      description: Originate default route to this neighbor.
                      type: dict
                      suboptions:
                        route_map:
                          description: Route map reference.
                          type: str
                        always:
                          descrition: Always originate default route to this neighbor.
                          type: bool
                    graceful_restart:
                      description: Enable graceful restart mode.
                      type: bool
                    next_hop_address_family:
                      description: Next-hop address-family configuration
                      type: str
                      choices: ['ipv6']
                    next_hop_unchanged:
                      description: Preserve original nexthop while advertising routes to
                             eBGP peers.
                      type: bool
                    prefix_list:
                      description: Prefix list reference.
                      type: dict
                      suboptions:
                        direction:
                          description: Configure an inbound/outbound prefix-list.
                          type: str
                          choices: ['in', 'out']
                        name:
                          description: prefix list name.
                          type: str
                    route_map:
                      description: Route map reference.
                      type: dict
                      suboptions:
                        direction:
                          description: Configure an inbound/outbound route-map.
                          type: str
                          choices: ['in', 'out']
                        name:
                          description: Route map name.
                          type: str
                    weight:
                      description: Weight to assign.
                      type: int 
                redistribute:
                  description: Redistribute routes in to BGP.
                  type: list
                  elements: dict
                  suboptions:         
                    protocol:
                      description: Routes to be redistributed.
                      type: str
                      choices: ['isis', 'ospf3', 'dhcp']
                    route_map:
                      description: Route map reference.
                      type: str
                    isis_level:
                      description: Applicable for isis routes. Specify isis route level.
                      type: str
                      choices: ['level-1', 'level-2', 'level-1-2']
                    ospf_route:
                      description: ospf route options.
                      type: str
                      choices: ['internal', 'external', 'nssa_external_1', 'nssa_external_2']  
                route_target:
                  description: Route target.
                  type: dict
                  suboptions:
                    action:
                      description: Route action.
                      type: str
                      choices: ['both', 'import', 'export']
                    target:
                      description: Route Target.
                      type: str
            aggregate_address:
              description: Configure aggregate address.
              type: list
              elements: dict
              suboptions:
                address:
                  description: ipv4/ipv6 address prefix.
                  type: str
                advertise_only:
                  description: Advertise without installing the generated blackhole route in
                      FIB.
                  type: bool
                as_set:
                  description: Generate autonomous system set path information.
                  type: bool
                attribute_map:
                  description: Name of the route map used to set the attribute of the
                      aggregate route.
                  type: str
                match_map:
                  description: Name of the route map used to filter the contributors of the
                      aggregate route.  
                  type: str
                summary_only:
                  description: Filters all more-specific routes from updates.
                  type: bool
            bgp_params:
              description: BGP parameters.
              type: dict
              suboptions:
                additional_paths:
                  description: BGP additional-paths commands
                  type: str
                  choices: ['install', 'send', 'receive'] 
                advertise_inactive:
                  description: Advertise BGP routes even if they are inactive in RIB.
                  type: bool
                allowas_in:
                  description: Allow local-as in updates.
                  type: dict
                  suboptions:
                    set:
                      description: When True, it is set.
                      type: bool
                    count:
                      description: Number of local ASNs allowed in a BGP update.
                      type: int
                always_compare_med:
                  description: BGP Always Compare MED
                  type: bool
                asn:
                  description: AS Number notation.
                  type: str
                  choices: ['asdot', 'asplain']
                auto_local_addr:
                  description: Automatically determine the local address to be used
                             for the non-transport AF.
                  type: bool
                bestpath:
                  description: Select the bestpath selection algorithim for BGP routes.
                  type: dict
                  suboptions:
                    as_path:
                      description: Select the bestpath selection based on as-path.
                      type: str
                      choices: ['ignore', 'multipath_relax']
                    ecmp_fast:
                      description: Tie-break BGP paths in a ECMP group based on the order of arrival.
                      type: bool
                    med:
                      description: MED attribute
                      type: dict
                      suboptions:
                        confed:
                          description: MED Confed.
                          type: bool
                        missing_as_worst:
                          description: MED missing-as-worst.
                          type: bool
                    skip:
                      description: skip one of the tie breaking rules in the bestpath selection.
                      type: bool
                    tie_break:
                      description: Configure the tie-break option for BGP bestpath selection.
                      choices: ['cluster_list_length', 'router_id']
                      type: str
                client_to_client:
                  description: client to client configuration.
                  type: bool
                cluster_id:
                  description: Cluster ID of this router acting as a route reflector.
                  type: str
                confederation:
                  description: confederation.
                  type: dict
                  suboptions:
                    identifier:
                      description: Confederation identifier.
                      type: int
                    peers:
                      description: Confederation peers.
                      type: list  
                control_plan_filter:
                  description: Control plane filter for BGP.
                  type: bool
                convergence:
                  description: Bgp convergence parameters.
                  type: dict
                  suboptions:
                    slow_peer:
                      description: Maximum amount of time to wait for slow peers to estabilsh session.
                      type: int
                    time:
                      description: time in secs
                      type: int
                default:
                  description: Default neighbor configuration commands.
                  type: str
                  choices: ['ipv4_unicast', 'ipv6_unicast']
                enforce_first_as:
                  description: Enforce the First AS for EBGP routes(default).
                  type: bool
                host_routes:
                  description: BGP host routes configuration.
                  type: bool
                labeled_unicast:
                  description: Labeled Unicast.
                  type: str
                  choices: ['ip', 'tunnel']
                listen:
                  description: BGP listen.
                  type: dict
                  suboptions:
                    limit:
                      description: Set limit on the number of dynamic BGP peers allowed.
                      type: int
                    range:
                      description: Subnet Range to be associated with the peer-group.
                      type: dict
                      suboptions:
                        address:
                          description: Address prefix
                          type: str
                        peer_group:
                          description: Name of peer group.
                          type: dict
                          suboptions:
                            name:
                              description: name.
                              type: str
                            peer_filter:
                              description: Name of peer filter.
                              type: str
                            remote_as:
                              description: Neighbor AS number
                              type: str
                log_neighbor_changes:
                  description: Log neighbor up/down events.
                  type: bool
                missing_policy:
                  description: Missing policy override configuration commands.
                  type: dict
                  suboptions:
                    direction:
                      description: Missing policy direction options.
                      type: str
                      choices: ['in', 'out']
                    action:
                      description: Missing policy action options.
                      type: str
                      choices: ['deny', 'permit', 'deny-in-out']
                monitoring:
                  description: Enable Bgp monitoring for all/specified stations.
                  type: bool
                next_hop_unchanged:
                  description: Preserve original nexthop while advertising routes to
                         eBGP peers.
                  type: bool
                redistribute_internal:
                  description: Redistribute internal BGP routes.
                  type: bool
                route:
                  description: Configure route-map for route installation.
                  type: str
                route_reflector:
                  description: Configure route reflector options
                  type: dict
                  suboptions:
                    set:
                      description: When True route_reflector is set.
                      type: bool
                    preserve:
                      description: preserve route attributes, overwriting route-map changes
                      type: bool 
                transport:
                  description: Configure transport port for TCP session
                  type: int
            default_metric:
              description: Default metric.
              type: int
            distance:
              description: Define an administrative distance.
              type: dict
              suboptions:
                external:
                  descriptions: distance for external routes.
                  type: int
                internal:
                  description: distance for internal routes.
                  type: int
                local:
                  description: distance for local routes.
                  type: int
            graceful_restart:
              description: Enable graceful restart mode.
              type: dict
              suboptions:
                set:
                  description: When True, graceful restart is set.
                  type: bool
                restart_time:
                  description: Set the max time needed to restart and come back up.
                  type: int
                stalepath_time:
                  decription: Set the max time to hold onto restarting peer stale paths.
                  type: int
            graceful_restart_helper:
              description: Enable graceful restart helper mode.
              type: bool
            access_group:
              desscription: ip/ipv6 access list configuration.
              type: dict
              suboptions:
                afi:
                  desscription: Specify ip/ipv6.
                  type: str
                  choices: ['ip', 'ipv6']
                acl_name:
                  description: access list name.
                  type: str
                direction:
                  description: direction of packets.
                  type: str
            maximum_paths:
              description: Maximum number of equal cost paths.
              type: dict
              suboptions:
                max_equal_cost_paths:
                  description: Value for maximum number of equal cost paths.
                  type: int
                max_installed_ecmp_paths:
                  description: Value for maximum number of installed ECMP routes.
                  type: int
            neighbor:
              description: Configure routing for a network.
              type: list
              elements: dict
              suboptions:
                address:
                  type: str
                  description: Neighbor address
                peer_group:
                  description: Name of the peer-group.
                  type: str
                additional_paths:
                  description: BGP additional-paths commands.
                  type: str
                  choices: ['send', 'receive']
                allowas_in:
                  description: Allow local-as in updates.
                  type: dict
                  suboptions:
                    set:
                      description: When True, it is set.
                      type: bool
                    count:
                      description: Number of local ASNs allowed in a BGP update.
                      type: int
                auto_local_addr:
                  description: Automatically determine the local address to be used
                                 for the non-transport AF.
                  type: bool
                default_orignate:
                  description: Originate default route to this neighbor.
                  type: dict
                  suboptions:
                    route_map:
                      description: Route map reference.
                      type: str
                    always:
                      descrition: Always originate default route to this neighbor.
                      type: bool
                description:
                  description: Text describing the neighbor.
                  type: str
                dont_capability_negotiate:
                  description: Donot perform Capability Negotiation with this
                                 neighbor.
                  type: bool
                ebgp_multihop:
                  description: Allow BGP connections to indirectly connected
                                 external peers.
                  type: dict
                  suboptions:
                    ttl:
                      description: Time-to-live in the range 1-255 hops.
                      type: int
                    set:
                      description: If True, ttl is not set.
                      type: bool
                enforce_first_as:
                  description: Enforce the First AS for EBGP routes(default).
                  type: bool
                export_localpref:
                  description: Override localpref when exporting to an internal
                                 peer.
                  type: int
                fall_over:
                  description: Configure BFD protocol options for this peer.
                  type: bool 
                graceful_restart:
                  description: Enable graceful restart mode.
                  type: bool
                graceful_restart_helper:
                  description: Enable graceful restart helper mode.
                  type: bool
                idle_restart_timer:
                  description: Neighbor idle restart timer.
                  type: int
                import_localpref:
                  description: Override localpref when importing from an external
                                 peer.
                  type: int
                link_bandwidth:
                  description: Enable link bandwidth community for routes to this
                                 peer.
                  type: dict
                  suboptions:
                    set:
                      description: If True, set link bandwidth
                      type: bool
                    auto:
                      description: Enable link bandwidth auto generation for routes from this peer.
                      type: bool
                    default:
                      description: Enable link bandwidth default generation for routes from this
                                    peer.
                      type: str
                    update_delay:
                      description: Delay outbound route updates.
                      type: int
                local_as:
                  description: Configure local AS number advertised to peer.
                  type: dict
                  suboptions:
                    as_number:
                      description: AS number.
                      type: str
                    fallback:
                      description: Prefer router AS Number over local AS Number.
                      type: bool
                local_v6_addr:
                  description: The local IPv6 address of the neighbor in A:B:C:D:E:F:G:H format.
                  type: str
                maximum_accepted_route:
                  description: Maximum number of routes accepted from this peer.
                  type: dict
                  suboptions:
                    count:
                      description: Maximum number of accepted routes (0 means unlimited).
                      type: int
                    warning_limit:
                      description: Maximum number of accepted routes after which a warning is issued.
                                   (0 means never warn)
                      type: int
                maximum_received_routes:
                  description: Maximum number of routes received from this peer.
                  type: dict
                  suboptions:
                    count:
                      description: Maximum number of routes (0 means unlimited).
                      type: int
                    warning_limit:
                      description: Percentage of maximum-routes at which warning is to be issued.
                      type: dict
                      suboptions:
                        limit_count:
                          description: Number of routes at which to warn.
                          type: int
                        limit_percent:
                          description: Percentage of maximum number of routes at which to warn( 1-100).
                          type: int
                    warning_only:
                      description: Only warn, no restart, if max route limit exceeded.
                      type: bool
                metric_out:
                  description: MED value to advertise to peer.
                  type: int
                monitoring:
                  description: Enable BGP Monitoring Protocol for this peer.
                  type: bool
                next_hop_self:
                  description: Always advertise this router address as the BGP
                                 next hop
                  type: bool
                next_hop_unchanged:
                  description: Preserve original nexthop while advertising routes to
                         eBGP peers.
                  type: bool
                next_hop_v6_address:
                  description: IPv6 next-hop address for the neighbor
                  type: str
                out_delay:
                  description: Delay outbound route updates.
                  type: int.
                encryption_password:
                  description: Password to use in computation of MD5 hash.
                  type: dict
                  suboptions:
                    type:
                      description: Encryption type.
                      type: int
                      choices: [0, 7]
                    password:
                      description: password (up to 80 chars).
                      type: str
                remote_as:
                  description: Neighbor Autonomous System.
                  type: str
                remove_private_as:
                  description: Remove private AS number from updates to this peer.
                  type: dict
                  suboptions:
                    set:
                      description: If True, set remove_private_as.
                      type: bool
                    all:
                      description: Remove private AS number.
                      type: bool
                    replace_as:
                      description: Replace private AS number with local AS number.
                      type: bool
                peer_group:
                  description: Name of the peer-group.
                  type: str 
            
                prefix_list:
                  description: Prefix list reference.
                  type: dict
                  suboptions:
                    direction:
                      description: Configure an inbound/outbound prefix-list.
                      type: str
                      choices: ['in', 'out']
                    name:
                      description: prefix list name.
                      type: str
                route_map:
                  description: Route map reference.
                  type: dict
                  suboptions:
                    direction:
                      description: Configure an inbound/outbound route-map.
                      type: str
                      choices: ['in', 'out']
                    name:
                      description: Route map name.
                      type: str
                route_reflector_client:
                  description: Configure peer as a route reflector client.
                  type: bool
                route_to_peer:
                  description: Use routing table information to reach the peer.
                  type: bool
                send_community:
                  description: Send community attribute to this neighbor.
                  type: dict
                  suboptions:
                    community_attribute:
                      description: Type of community attributes to send to this neighbor.
                      type: str
                    sub_attribute:
                      description: Attribute to be sent to the neighbor.
                      type: str
                      choices: ['extended', 'link_bandwidth', 'standard']
                    link_bandwidth_attribute:
                      description: cumulative/aggregate attribute to be sent.
                      type: str
                      choices: ['aggregate', 'divide']
                    speed:
                      description: Reference link speed in bits/second
                      type: str 
                    divide:
                      description: link-bandwidth divide attribute.
                      type: str
                      choices: ['equal', 'ratio']
                shut_down:
                  description: Administratively shut down this neighbor.
                  type: bool
                soft_recognition:
                  description: Configure how to handle routes that fail import.
                  type: str
                  choices: ['all', 'None']
                timers:
                  description: Timers.
                  type: dict
                  suboptions:
                    keepalive:
                      description: Keep Alive Interval in secs.
                      type: int
                    holdtime:
                      description: Hold time in secs.
                      type: int
                transport:
                  description: Configure transport options for TCP session.
                  type: dict
                  suboptions:
                    connection_mode:
                      description: Configure connection-mode for TCP session.
                      type: str
                    remote_port:
                      description: Configure BGP peer TCP port to connect to.
                      type: int
                ttl:
                  description: BGP ttl security check
                  type: int 
                update_source:
                  description: Specify the local source interface for peer BGP
                                 sessions.
                  type: str
                weight:
                  description: Weight to assign.
                  type: int 
            network:
              description: Configure routing for a network.
              type: dict
              suboptions:
                address:
                  description: address prefix.
                  type: int
                route_map:
                  description: Name of route map.
                  type: str
            redistribute:
              description: Redistribute routes in to BGP.
              type: list
              elements: dict
              suboptions:         
                protocol:
                  description: Routes to be redistributed.
                  type: str
                  choices: ['isis', 'ospf3', 'ospf', 'attached_host', 'connected', 'rip', 'static']
                route_map:
                  description: Route map reference.
                  type: str
                isis_level:
                  description: Applicable for isis routes. Specify isis route level.
                  type: str
                  choices: ['level-1', 'level-2', 'level-1-2']
                ospf_route:
                  description: ospf route options.
                  type: str
                  choices: ['internal', 'external', 'nssa_external_1', 'nssa_external_2']  
            route_target:
              description: Route target.
              type: dict
              suboptions:
                action:
                  description: Route action.
                  type: str
                  choices: ['both', 'import', 'export']
                target:
                  description: Route Target.
                  type: str
            router_id:
              description: Router id.
              type: str
            shutdown:
              description: When True, shut down BGP.
              type: bool
            timers:
              description: Timers.
              type: dict
              suboptions:
                keepalive:
                  description: Keep Alive Interval in secs.
                  type: int
                holdtime:
                  description: Hold time in secs.
                  type: int
            ucmp:
              description: Configure unequal cost multipathing.
              type: dict
              suboptions:
                fec:
                  description: Configure UCMP fec utilization threshold.
                  type: dict
                  suboptions:
                    trigger:
                      description: UCMP fec utilization too high threshold.
                      type: int
                    clear:
                      description: UCMP FEC utilization Clear thresholds.
                      type: int
                link_bandwidth:
                  description: Configure link-bandwidth propagation delay.
                  type: dict
                  suboptions:
                    mode:
                      description: UCMP link bandwidth mode
                      type: str
                      choices: ['encoding_weighted', 'recursive']
                    update_delay:
                      description: Link Bandwidth Advertisement delay.
                      type: int
                mode:
                  description: UCMP mode.
                  type: dict
                  suboptions:
                    set:
                      description: If True, ucmp mode is set to 1.
                      type: bool
                    nexthops:
                      description: Value for total number UCMP nexthops.
                      type: int
            update:
              description: Configure BGP update generation.
              type: dict
              suboptions:
                wait_for:
                  description: wait for options before converge or synchronize.
                  type: str
                  choices: ['wait_for_convergence', 'wait_install']
                batch_size:
                  description: batch size for FIB route acknowledgements.
                  type: int
            
                
        




          elements: dict
          suboptions:
            process_id:
              description: ID of OSPFV2 process.
              type: int
            vrf:
              description: VRF name .
              type: str
            traffic_engineering:
              description: Enter traffic engineering config mode
              type: bool
            adjacency:
              description: Configure adjacency options for OSPF instance.
              type: dict
              suboptions:
                exchange_start:
                  description: Configure exchange-start options for OSPF instance.
                  type: dict
                  suboptions:
                    threshold:
                      description: Number of peers to bring up simultaneously.
                      type: int
            router_id:
              description: 32-bit number assigned to a router running OSPFv2.
              type: str
            max_lsa:
              description: Specifies the switch behavior on reaching max lsa count.
              type: dict
              suboptions:
                count:
                  description: maximum count of lsas.
                  type: int
                threshold:
                  description: percentage of <count> , when a warning should be raised.
                  type: int
                ignore_time:
                  description: time in minutes, for which the switch shoud be shutdown
                    on max-lsa warning
                  type: int
                ignore_count:
                  description: No. of times the switch can shut down temporarily on
                    warning
                  type: int
                reset_time:
                  description: Time in minutes, after which the shutdown counter resets.
                  type: int
                warning:
                  description: Only give warning message when limit is exceeded
                  type: bool
            max_metric:
              description: Set maximum metric.
              type: dict
              suboptions:
                router_lsa:
                  description: Maximum metric in self-originated router-LSAs.
                  type: dict
                  suboptions:
                    set:
                      description:
                      - Set router-lsa attribute.
                      type: bool
                    external_lsa:
                      description: Override external-lsa metric with max-metric value.
                      type: dict
                      suboptions:
                        set:
                          description:
                          - Set external-lsa attribute.
                          type: bool
                        max_metric_value:
                          description:
                          - Set max metric value for external LSAs.
                          type: int
                    include_stub:
                      description: Set maximum metric for stub links in router-LSAs.
                      type: bool
                    on_startup:
                      description: Set maximum metric temporarily after reboot.
                      type: dict
                      suboptions:
                        wait_period:
                          description:
                          - Wait period in seconds after startup.
                          type: int
                    summary_lsa:
                      description: Override summary-lsa metric with max-metric value.
                      type: dict
                      suboptions:
                        set:
                          description:
                          - Set external-lsa attribute.
                          type: bool
                        max_metric_value:
                          description:
                          - Set max metric value for external LSAs.
                          type: int
            log_adjacency_changes:
              description: To configure link-state changes and transitions of OSPFv2
                neighbors.
              type: dict
              suboptions:
                detail:
                  description: If true , configures the switch to log all link-state
                    changes.
                  type: bool
            maximum_paths:
              description: Maximum number of next-hops in an ECMP route.
              type: int
            mpls_ldp:
              description: mpls ldp sync configuration.
              type: bool
            networks:
              description: Configure routing for a network.
              type: list
              elements: dict
              suboptions:
                network_address:
                  description: Network Address.
                  type: str
                prefix:
                  description: Prefix.
                  type: str
                mask:
                  description: Network Wildcard Mask.
                  type: str
                area:
                  description: Configure OSPF area.
                  type: str
            passive_interface:
              description: Include interface but without actively running OSPF.
              type: dict
              suboptions:
                interface_list:
                  description: Interface range.
                  type: str
                default:
                  description: If True, Set all interfaces to passive by default
                  type: bool
            point_to_point:
              description: Configure Point-to-point specific features.
              type: bool
            rfc1583compatibility:
              description: Specifies different methods for calculating summary route
                metrics.
              type: bool
            distance:
              description: Specifies the administrative distance for routes.
              type: dict
              suboptions:
                external:
                  description: Routes external to the area
                  type: int
                inter_area:
                  description: Routes from other areas
                  type: int
                intra_area:
                  description: Routes with in an area
                  type: int
            redistribute:
              description: Specifies the routes to be redistributed
              type: list
              elements: dict
              suboptions:
                routes:
                  description: Route types (BGP,isis,connected etc)
                  type: str
                route_map:
                  description: Specify which route map to use.
                  type: str
                isis_level:
                  description: ISIS levels.
                  type: str
            retransmission_threshold:
              description: Configure threshold for retransmission.
              type: int
            distribute_list:
              description: Specifies the list of routes to be filtered.
              type: dict
              suboptions:
                route_map:
                  description: route map to be filtered
                  type: str
                prefix_list:
                  description: prefix list to be filtered
                  type: str
            areas:
              description: Specifies the configuration for OSPF areas
              type: list
              elements: dict
              suboptions:
                area_id:
                  description: Specifies a 32 bit number expressed in decimal or dotted-decimal
                    notation.
                  type: str
                default_cost:
                  description: Specify the cost for default summary route in stub/NSSA
                    area.
                  type: int
                filter:
                  description: Specify the filter for incoming summary LSAs.
                  type: dict
                  suboptions:
                    address:
                      description: IP address.
                      type: str
                    subnet_address:
                      description: IP address with mask length
                      type: str
                    subnet_mask:
                      description: IP subnet mask
                      type: str
                    prefix_list:
                      description: Specify list to filter for incoming LSAs.
                      type: str
                nssa:
                  description: Configures NSSA parameters.
                  type: dict
                  suboptions:
                    default_information_originate:
                      description: Originate default Type 7 LSA.
                      type: dict
                      suboptions:
                        metric:
                          description: Metric for default route.
                          type: int
                        metric_type:
                          description: Metric type for default route.
                          type: int
                        nssa_only:
                          description: Limit default advertisement to this NSSA area.
                          type: bool
                    no_summary:
                      description: Filter all type-3 LSAs in the nssa area.
                      type: bool
                    nssa_only:
                      description: Disable Type-7 LSA p-bit setting
                      type: bool
                    set:
                      description: Set config up to nssa
                      type: bool
                not_so_stubby:
                  description: Configures NSSA parameters.
                  type: dict
                  suboptions:
                    default_information_originate:
                      description: Originate default Type 7 LSA.
                      type: dict
                      suboptions:
                        metric:
                          description: Metric for default route.
                          type: int
                        metric_type:
                          description: Metric type for default route.
                          type: int
                        nssa_only:
                          description: Limit default advertisement to this NSSA area.
                          type: bool
                    lsa:
                      description: lsa parameters
                      type: bool
                    no_summary:
                      description: Filter all type-3 LSAs in the nssa area.
                      type: bool
                    nssa_only:
                      description: Disable Type-7 LSA p-bit setting
                      type: bool
                    set:
                      description: Set config up to not-so-stubby
                      type: bool
                range:
                  description: Configure route summarization.
                  type: dict
                  suboptions:
                    address:
                      description: IP address.
                      type: str
                    subnet_address:
                      description: IP address with mask length
                      type: str
                    subnet_mask:
                      description: IP subnet mask
                      type: str
                    advertise:
                      description: Enable Advertisement of the range.
                      type: bool
                    cost:
                      description: Configures the metric.
                      type: int
                stub:
                  description: Stub area.
                  type: dict
                  suboptions:
                    no_summary:
                      description: If False , Filter all type-3 LSAs in the stub area.
                      type: bool
                    set:
                      description: When true sets the stub config alone.
                      type: bool
            auto_cost:
              description: Set auto-cost.
              type: dict
              suboptions:
                reference_bandwidth:
                  description: reference bandwidth in megabits per sec.
                  type: int
            bfd:
              description: Enable BFD.
              type: dict
              suboptions:
                all_interfaces:
                  description: Enable BFD on all interfaces.
                  type: bool
            default_information:
              description: Control distribution of default information.
              type: dict
              suboptions:
                originate:
                  description: Distribute a default route.
                  type: bool
                always:
                  description: Always advertise default route.
                  type: bool
                metric:
                  description: Metric for default route.
                  type: int
                metric_type:
                  description: Metric type for default route.
                  type: int
                route_map:
                  description: Specify which route-map to use.
                  type: str
            default_metric:
              description: Configure the default metric for redistributed routes
              type: int
            dn_bit_ignore:
              description: If True, Disable dn-bit check for Type-3 LSAs in non-default
                VRFs.
              type: bool
            graceful_restart:
              description: Enable graceful restart mode.
              type: dict
              suboptions:
                grace_period:
                  description: Specify maximum time to wait for graceful-restart to
                    complete.
                  type: int
                set:
                  description: When true sets the grace_fulrestart config alone.
                  type: bool
            graceful_restart_helper:
              description: If True, Enable graceful restart helper.
              type: bool
            shutdown:
              description: Disable the OSPF instance.
              type: bool
            summary_address:
              description: Summary route configuration.
              type: dict
              suboptions:
                address:
                  description: IP summary address.
                  type: str
                prefix:
                  description: Prefix.
                  type: str
                mask:
                  description: Summary Mask.
                  type: str
                attribute_map:
                  description: Set attributes of summary route.
                  type: str
                not_advertise:
                  description: Do not advertise summary route.
                  type: bool
                tag:
                  description: Set tag.
                  type: int
            timers:
              description: Configure OSPF timers.
              type: list
              elements: dict
              suboptions:
                lsa:
                  description: Configure OSPF LSA timers.
                  type: dict
                  suboptions:
                    rx:
                      description: Configure OSPF LSA receiving timers
                      type: dict
                      suboptions:
                        min_interval:
                          description: Configure OSPF LSA arrival timer.
                          type: int
                    tx:
                      description: Configure OSPF LSA transmission timers.
                      type: dict
                      suboptions:
                        delay:
                          description: Configure OSPF LSA transmission delay.
                          type: dict
                          suboptions:
                            initial:
                              description: Delay to generate first occurrence of LSA
                                in msecs.
                              type: int
                            min:
                              description: Min delay between originating the same LSA
                                in msecs.
                              type: int
                            max:
                              description: Maximum delay between originating the same
                                LSA in msecs.
                              type: int
                out_delay:
                  description: Configure out-delay timer.
                  type: int
                pacing:
                  description: Configure OSPF packet pacing.
                  type: int
                spf:
                  description: Configure SPF timers
                  type: dict
                  suboptions:
                    seconds:
                      description: Seconds.
                      type: int
                    initial:
                      description: Initial SPF schedule delay in msecs.
                      type: int
                    min:
                      description: Min Hold time between two SPFs in msecs
                      type: int
                    max:
                      description: Max wait time between two SPFs in msecs.
                      type: int
            fips_restrictions:
              description: Use FIPS compliant algorithms
              type: str
    running_config:
      description:
      - This option is used only with state I(parsed).
      - The value of this option should be the output received from the EOS device by
        executing the command B(show running-config | section ospf).
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into Ansible structured data as per the resource module's argspec
        and the value is then returned in the I(parsed) key within the result.
      type: str
    state:
      description:
      - The state the configuration should be left in.
      type: str
      choices: [deleted, merged, overridden, replaced, gathered, rendered, parsed]
      default: merged
EXAMPLES:
- deleted_example_01.txt
- merged_example_01.txt
- overridden_example_01.txt
- replaced_example_01.txt
- gathered_example_01.txt
- rendered_example_01.txt
"""

from ansible.module_utils.basic import AnsibleModule
from ansible_collections.arista.eos.plugins.module_utils.network.eos.argspec.eos_bgp_global.eos_bgp_global import (
    Eos_bgp_globalArgs,
)
from ansible_collections.arista.eos.plugins.module_utils.network.eos.config.eos_bgp_global.eos_bgp_global import (
    Eos_bgp_global,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(
        argument_spec=Eos_bgp_globalArgs.argument_spec,
        mutually_exclusive=[],
        required_if=[],
        supports_check_mode=False
    )

    result = Eos_bgp_global(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
